/*
  Jenkins Pipeline for Python messaging app:
  - Cleans workspace
  - Checks out repo from GitHub
  - Installs Python and dependencies
  - Runs pytest and generates a report
  - Archives test report
*/

pipeline {
    agent any

    environment {
        GITHUB_CREDENTIALS = 'github-credentials' // Replace with your Jenkins credential ID
        APP_DIR = 'messaging_app' // Project directory
    }

    stages {
        stage('Cleanup') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout Code') {
            steps {
                git branch: 'master',
                    url: 'https://github.com/GodwinCyber/alx-backend-python.git',
                    credentialsId: "${GITHUB_CREDENTIALS}"
            }
        }

        stage('Verify Python Installation') {
            steps {
                sh '''
                echo "Checking Python installation..."
                if ! command -v python3 &> /dev/null; then
                    echo "Python3 not found, installing..."
                    sudo apt-get update && apt-get install -y python3 python3-venv python3-pip
                else
                    python3 --version
                    pip3 --version
                fi
                '''
            }
        }

        stage('Set up Virtual Environment') {
            steps {
                dir("${APP_DIR}") {
                    sh '''
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install --upgrade pip
                    pip install -r requirements.txt
                    '''
                }
            }
        }

        stage('Run Tests with Pytest') {
            steps {
                dir("${APP_DIR}") {
                    sh '''
                    . venv/bin/activate
                    pytest tests --junitxml=../report.xml
                    '''
                }
            }
        }

        stage('Archive Test Report') {
            steps {
                junit 'report.xml'
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished successfully.'
        }
    }
}
